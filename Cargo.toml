[package]
name = "eframe-multinode"
version = "0.1.2"
authors = ["Doug Anderson <doug@peerpiper.io>"]
edition = "2021"
include = ["LICENSE-APACHE", "LICENSE-MIT", "**/*.rs", "Cargo.toml"]
rust-version = "1.80"
description = "A PeerPiper multi-node application built using egui and efrem that runs in the browser and desktop."

[package.metadata.docs.rs]
all-features = true
targets = ["x86_64-unknown-linux-gnu", "wasm32-unknown-unknown"]

[dependencies]
egui = "0.29"
eframe = { version = "0.29", default-features = false, features = [
  "accesskit",     # Make egui compatible with screen readers. NOTE: adds a lot of dependencies.
  "default_fonts", # Embed the default egui fonts.
  "glow",          # Use the glow rendering backend. Alternative: "wgpu".
  "persistence",   # Enable restoring app state when restarting the app.
] }
log = "0.4"

# You only need serde if you want app persistence:
serde = { version = "1", features = ["derive"] }
tracing = { version = "0.1" }
seed-keeper-core = { git = "https://github.com/DougAnderson444/seed-keeper.git" }
egui_material_icons = "0.1.0"

# native:
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
env_logger = "0.11"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
tokio = { version = "1", features = [
  "time",
  "rt",
  "macros",
  "sync",
  "rt-multi-thread",
] }
peerpiper-plugins = { git = "https://github.com/PeerPiper/peerpiper.git" }
rfd = "0.15" # Rust File Dialog 

# web:
[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen-futures = "0.4"
web-sys = { version = "0.3.70", features = [
  "FileReader",
  "Request",
  "RequestInit",
  "RequestMode",
  "Response",
  "Headers",
] }
getrandom = { version = "0.2", features = ["js"] }
egui_suspense = "0.6.0"
serde-wasm-bindgen = "0.6"

[profile.release]
opt-level = 2 # fast and small wasm

# Optimize all dependencies even in debug builds:
[profile.dev.package."*"]
opt-level = 2


[patch.crates-io]

# If you want to use the bleeding edge version of egui and eframe:
# egui = { git = "https://github.com/emilk/egui", branch = "master" }
# eframe = { git = "https://github.com/emilk/egui", branch = "master" }

# If you fork https://github.com/emilk/egui you can test with:
# egui = { path = "../egui/crates/egui" }
# eframe = { path = "../egui/crates/eframe" }
